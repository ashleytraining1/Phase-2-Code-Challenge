{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ashley/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js\";\nimport React from \"react\";\n\nfunction AddTransactionForm() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: [\"function newTransaction(AddTransactionForm)\", fetch(`${apiHost}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(AddTransactionForm)\n        }).then(response => response.json()).then(transaction => console.log(transaction))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\nform.addEventListener(\"submit\", event => {\n  event.preventDefault();\n  let myFormInputs = {\n    username: event.target.querySelector(\"#username\").value,\n    idNumber: event.target.querySelector(\"#studentIDNumber\").value,\n    email: event.target.querySelector(\"#studentEmail\").value,\n    class: event.target.querySelector(\"#totalClass\").value,\n    rollNumber: event.target.querySelector(\"#rollNo\").value,\n    sponserName: event.target.querySelector(\"#sponserName\").value\n  };\n  event.target.reset();\n  console.log(myFormInputs);\n  newRecord(myFormInputs);\n  renderRecords(myFormInputs);\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/ashley/Downloads/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js"],"names":["React","AddTransactionForm","fetch","apiHost","method","headers","body","JSON","stringify","then","response","json","transaction","console","log","form","addEventListener","event","preventDefault","myFormInputs","username","target","querySelector","value","idNumber","email","class","rollNumber","sponserName","reset","newRecord","renderRecords"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,kBAAT,GAA8B;AAC5B,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,aAAxB;AAAsC,UAAA,WAAW,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,QAA1B;AAAmC,UAAA,WAAW,EAAC,QAA/C;AAAwD,UAAA,IAAI,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA,kEAGJC,KAAK,CAAE,GAAEC,OAAQ,EAAZ,EAAe;AAChBC,UAAAA,MAAM,EAAE,MADQ;AAEhBC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAFO;AAKhBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,kBAAf;AALU,SAAf,CAAL,CAOCQ,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQMG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CARrB,CAHI;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;KA3BQX,kB;AA6BT,eAAeA,kBAAf;AAEAc,IAAI,CAACC,gBAAL,CAAsB,QAAtB,EAAiCC,KAAD,IAAW;AACzCA,EAAAA,KAAK,CAACC,cAAN;AACA,MAAIC,YAAY,GAAG;AACrBC,IAAAA,QAAQ,EAAEH,KAAK,CAACI,MAAN,CAAaC,aAAb,CAA2B,WAA3B,EAAwCC,KAD7B;AAErBC,IAAAA,QAAQ,EAAEP,KAAK,CAACI,MAAN,CAAaC,aAAb,CAA2B,kBAA3B,EAA+CC,KAFpC;AAGrBE,IAAAA,KAAK,EAAER,KAAK,CAACI,MAAN,CAAaC,aAAb,CAA2B,eAA3B,EAA4CC,KAH9B;AAIrBG,IAAAA,KAAK,EAAET,KAAK,CAACI,MAAN,CAAaC,aAAb,CAA2B,aAA3B,EAA0CC,KAJ5B;AAKrBI,IAAAA,UAAU,EAAEV,KAAK,CAACI,MAAN,CAAaC,aAAb,CAA2B,SAA3B,EAAsCC,KAL7B;AAMrBK,IAAAA,WAAW,EAAEX,KAAK,CAACI,MAAN,CAAaC,aAAb,CAA2B,cAA3B,EAA2CC;AANnC,GAAnB;AAQFN,EAAAA,KAAK,CAACI,MAAN,CAAaQ,KAAb;AACAhB,EAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACAW,EAAAA,SAAS,CAACX,YAAD,CAAT;AACAY,EAAAA,aAAa,CAACZ,YAAD,CAAb;AACC,CAdD","sourcesContent":["import React from \"react\";\n\nfunction AddTransactionForm() {\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\">\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" />\n          <input type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          {/* Add Transaction */}\n          function newTransaction(AddTransactionForm){\n    fetch(`${apiHost}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(AddTransactionForm)\n    })\n    .then(response => response.json())\n    .then(transaction => console.log(transaction))\n}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault()\n  let myFormInputs = {\nusername: event.target.querySelector(\"#username\").value,\nidNumber: event.target.querySelector(\"#studentIDNumber\").value,\nemail: event.target.querySelector(\"#studentEmail\").value,\nclass: event.target.querySelector(\"#totalClass\").value,\nrollNumber: event.target.querySelector(\"#rollNo\").value,\nsponserName: event.target.querySelector(\"#sponserName\").value\n  }\nevent.target.reset();\nconsole.log(myFormInputs);\nnewRecord(myFormInputs);\nrenderRecords(myFormInputs);\n})"]},"metadata":{},"sourceType":"module"}